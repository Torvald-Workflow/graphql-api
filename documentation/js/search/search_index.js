var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.228,1,2.004]],["body/modules/AppModule.html",[0,1.804,1,3.748,2,1.342,3,1.342,4,1.635,5,1.635,6,1.342,7,1.635,8,1.635,9,2.38,10,2.38,11,3.115,12,0.034,13,2.814,14,2.814,15,2.287,16,1.635,17,1.635,18,0.303,19,0.262,20,0.185,21,2.863,22,2.944,23,0.593,24,0.786,25,2.863,26,1.023,27,2.062,28,1.342,29,2.863,30,2.944,31,2.863,32,2.863,33,2.863,34,2.863,35,2.863,36,2.863,37,2.863,38,1.342,39,2.38,40,4.005,41,2.863,42,0.859,43,1.635,44,2.863,45,0.303,46,0.133,47,0.015,48,0.022,49,0.015]],["title/modules/AuthModule.html",[0,1.228,11,1.796]],["body/modules/AuthModule.html",[0,1.775,2,1.303,3,1.303,4,1.587,5,1.587,6,1.303,7,2.596,8,2.596,11,3.376,12,0.034,14,2.788,15,2.24,16,1.587,17,1.587,18,0.294,19,0.254,20,0.179,22,2.5,23,0.6,24,0.763,45,0.294,46,0.129,47,0.015,48,0.021,49,0.015,50,2.311,51,2.78,52,2.311,53,2.311,54,3.078,55,3.086,56,2.78,57,2.78,58,2.002,59,3.923,60,1.772,61,2.78,62,2.5,63,2.78,64,2.311,65,1.772,66,2.311,67,2.78,68,2.78,69,2.311,70,2.311,71,2.78,72,2.78,73,2.78]],["title/classes/AuthResolver.html",[46,0.146,62,2.004]],["body/classes/AuthResolver.html",[12,0.034,18,0.3,19,0.259,20,0.183,23,0.555,24,0.777,26,1.012,42,1.192,45,0.3,46,0.131,47,0.015,48,0.021,49,0.015,54,2.804,62,2.532,64,2.354,74,0.777,75,2.354,76,0.342,77,1.301,78,1.793,79,3.817,80,1.327,81,2.831,82,0.75,83,2.831,84,1.421,85,0.608,86,1.421,87,2.831,88,3.173,89,1.21,90,2.831,91,2.831,92,3.974,93,0.927,94,1.698,95,3.974,96,2.354,97,3.304,98,2.862,99,2.532,100,2.831,101,2.831,102,2.354,103,2.039,104,2.831,105,2.05,106,1.377,107,1.698,108,2.831,109,2.831,110,2.831,111,2.831,112,1.804,113,3.304,114,2.831,115,1.106,116,2.831]],["title/injectables/AuthService.html",[54,1.623,117,0.943]],["body/injectables/AuthService.html",[12,0.034,18,0.264,19,0.229,20,0.161,23,0.529,24,0.686,42,1.285,45,0.264,46,0.116,47,0.013,48,0.02,49,0.013,54,1.875,58,1.8,76,0.302,77,1.19,78,2.036,79,3.021,80,1.703,82,0.809,84,1.531,85,0.656,86,1.531,93,1.19,94,1.553,105,2.209,106,1.654,107,1.553,115,1.837,117,1.09,118,1.289,119,2.077,120,3.634,121,2.077,122,2.443,123,5.382,124,2.499,125,3.634,126,2.499,127,3.634,128,1.564,129,2.209,130,2.499,131,1.171,132,2.618,133,2.077,134,2.499,135,2.316,136,2.499,137,2.618,138,3.634,139,2.499,140,2.077,141,2.499,142,2.077,143,1.8,144,2.077,145,2.499,146,2.499,147,2.499,148,2.499]],["title/classes/AuthenticatedUser.html",[46,0.146,99,2.004]],["body/classes/AuthenticatedUser.html",[12,0.034,18,0.391,19,0.338,20,0.238,23,0.503,26,1.32,45,0.391,46,0.171,47,0.02,48,0.026,49,0.02,74,1.013,76,0.446,82,0.897,85,0.727,89,2.03,99,3.027,106,1.762,113,4.367,128,1.425,133,3.069,149,3.069,150,2.03,151,3.657,152,3.692,153,3.692,154,3.95]],["title/classes/Configuration.html",[46,0.146,155,1.623]],["body/classes/Configuration.html",[12,0.034,18,0.329,19,0.284,20,0.2,23,0.448,42,1.446,45,0.329,46,0.144,47,0.017,48,0.023,49,0.017,74,0.853,76,0.375,82,0.978,85,0.892,89,2.213,128,1.678,150,1.811,155,2.186,156,2.583,157,3.474,158,2.754,159,5.422,160,3.107,161,3.107,162,3.052,163,2.583,164,3.523,165,4.238,166,4.01,167,3.107,168,2.583,169,2.186,170,3.107,171,4.01,172,3.523,173,1.456,174,3.107,175,2.583]],["title/modules/ConfigurationModule.html",[0,1.228,13,1.623]],["body/modules/ConfigurationModule.html",[0,1.945,2,1.55,3,1.55,4,1.889,5,1.889,6,1.55,7,2.843,8,2.843,12,0.034,13,3.002,15,2.525,16,1.889,17,1.889,18,0.35,19,0.303,20,0.213,22,2.108,23,0.586,24,0.908,27,2.383,28,1.55,45,0.35,46,0.153,47,0.018,48,0.024,49,0.018,155,1.707,176,2.751,177,2.751,178,2.751,179,2.879,180,3.309,181,2.818,182,3.309,183,2.751,184,2.751,185,3.309]],["title/classes/ConfigurationResolver.html",[46,0.146,181,2.004]],["body/classes/ConfigurationResolver.html",[12,0.033,18,0.473,19,0.409,20,0.288,23,0.473,26,1.597,45,0.473,46,0.207,47,0.024,48,0.029,49,0.024,74,1.226,98,3.852,181,3.408,186,3.714]],["title/injectables/ConfigurationService.html",[117,0.943,179,1.474]],["body/injectables/ConfigurationService.html",[12,0.034,18,0.302,19,0.261,20,0.184,23,0.529,24,0.783,28,1.337,38,1.337,42,1.383,45,0.302,46,0.132,47,0.015,48,0.021,49,0.015,76,0.345,77,1.308,78,2.128,80,1.872,82,0.87,84,1.02,85,0.437,86,1.02,93,1.308,94,2.134,105,2.061,107,1.707,115,1.56,117,1.198,118,1.471,135,1.818,155,2.061,157,2.877,169,1.471,173,1.337,179,1.872,184,2.371,187,2.371,188,4.995,189,4.995,190,2.852,191,3.597,192,2.852,193,3.995,194,2.852,195,2.852,196,2.371,197,2.852,198,3.832,199,3.995,200,3.321,201,2.852,202,2.852,203,2.852]],["title/classes/CreateConfigurationTable1619857346529.html",[46,0.146,204,2.265]],["body/classes/CreateConfigurationTable1619857346529.html",[12,0.033,18,0.27,19,0.233,20,0.164,23,0.27,38,1.194,42,1.663,43,1.455,45,0.27,46,0.118,47,0.014,48,0.02,49,0.014,74,0.7,76,0.308,77,1.207,78,2.05,82,0.818,84,1.318,85,0.771,86,1.318,93,1.207,94,2.028,107,1.851,128,0.764,137,3.419,150,1.575,155,2.234,157,3.12,158,2.473,164,2.119,173,1.194,198,2.119,200,2.119,204,3.419,205,3.946,206,2.119,207,2.349,208,3.601,209,4.365,210,3.065,211,3.065,212,2.549,213,3.065,214,4.697,215,2.549,216,3.065,217,2.549,218,3.065,219,1.836,220,2.655,221,3.601,222,3.601,223,2.119,224,2.549,225,2.119,226,2.119,227,2.549,228,2.549,229,2.119,230,2.119]],["title/classes/CreateUserDto.html",[46,0.146,231,1.796]],["body/classes/CreateUserDto.html",[12,0.033,18,0.329,19,0.284,20,0.2,23,0.448,26,1.111,45,0.329,46,0.196,47,0.017,48,0.023,49,0.017,74,0.853,76,0.375,82,0.978,85,0.793,89,2.213,128,1.748,129,2.488,131,2.26,150,1.811,151,3.455,231,2.42,232,2.583,233,3.073,234,3.073,235,4.238,236,3.107,237,3.107,238,3.107,239,3.107,240,3.107,241,3.107,242,3.523,243,4.238,244,5.422,245,5.181,246,3.107,247,2.583,248,3.107]],["title/classes/CreateUserTable1619763498661.html",[46,0.146,249,2.265]],["body/classes/CreateUserTable1619763498661.html",[12,0.033,18,0.26,19,0.225,20,0.159,23,0.26,38,1.152,42,1.489,43,2.665,45,0.26,46,0.114,47,0.013,48,0.019,49,0.013,74,0.675,76,0.297,77,1.176,78,2.025,82,0.801,84,1.284,85,0.65,86,1.284,93,1.176,94,1.994,106,1.077,107,1.535,128,0.737,129,1.268,131,1.683,137,3.954,150,1.535,158,1.404,169,1.268,173,1.152,207,2.289,208,3.528,209,4.31,210,2.986,211,2.986,213,2.986,214,4.655,216,2.986,218,2.044,219,1.771,220,2.587,221,4.127,222,4.127,223,2.986,225,2.044,226,2.044,230,2.044,233,1.567,234,1.567,249,3.362,250,3.88,251,2.044,252,2.459,253,2.459,254,2.459,255,2.587,256,2.459,257,2.459,258,2.044,259,1.771,260,2.044,261,2.587,262,2.044,263,2.044,264,2.044,265,2.044,266,2.459,267,2.044,268,2.459]],["title/classes/CreditentialInput.html",[46,0.146,88,2.004]],["body/classes/CreditentialInput.html",[12,0.033,18,0.4,19,0.346,20,0.244,23,0.4,26,1.352,45,0.4,46,0.175,47,0.02,48,0.026,49,0.02,74,1.038,76,0.457,82,0.911,85,0.739,88,3.075,89,2.062,128,1.679,129,2.741,131,2.49,150,2.062,151,3.685,242,4.012,269,3.145,270,3.783,271,3.783]],["title/guards/InstallationGuard.html",[272,2.265,273,2.004]],["body/guards/InstallationGuard.html",[12,0.033,18,0.371,19,0.321,20,0.226,23,0.486,24,0.962,42,1.051,45,0.371,46,0.162,47,0.019,48,0.025,49,0.019,76,0.424,77,1.504,78,2.001,80,1.643,82,0.867,84,1.253,85,0.537,86,1.253,93,1.148,94,1.963,102,2.914,103,2.525,107,1.498,115,1.369,117,1.378,179,2.715,183,2.914,207,2.234,273,2.928,274,3.506,275,2.914,276,5.793,277,3.506,278,3.506,279,3.506,280,3.506]],["title/injectables/JwtAuthGuard.html",[117,0.943,281,2.004]],["body/injectables/JwtAuthGuard.html",[12,0.034,18,0.376,19,0.325,20,0.229,23,0.546,24,0.976,26,1.271,39,2.955,42,1.066,45,0.376,46,0.165,47,0.019,48,0.025,49,0.019,60,2.265,76,0.429,77,1.518,82,0.671,84,1.271,85,0.544,86,1.271,93,1.164,105,1.833,115,1.388,117,1.39,118,1.833,281,2.954,282,3.339,283,2.955,284,4.636,285,4.636,286,5.467,287,3.554,288,3.554,289,3.554,290,2.955,291,3.554,292,3.554,293,3.554,294,3.554]],["title/injectables/JwtStrategy.html",[55,1.796,117,0.943]],["body/injectables/JwtStrategy.html",[12,0.034,18,0.343,19,0.296,20,0.209,23,0.558,24,0.889,42,0.971,45,0.343,46,0.15,47,0.017,48,0.023,49,0.017,55,2.489,60,2.064,65,2.064,66,2.692,70,2.692,76,0.391,77,1.427,78,1.924,80,2.308,82,0.823,84,1.158,85,0.496,86,1.158,93,1.06,115,1.265,117,1.307,118,1.671,142,2.692,143,2.333,169,1.671,290,2.692,295,2.692,296,4.359,297,3.239,298,4.359,299,3.239,300,3.239,301,3.239,302,3.239,303,2.692,304,2.692,305,3.239,306,3.239,307,3.239,308,3.239,309,3.239,310,3.239,311,3.239,312,3.239,313,3.239]],["title/classes/TypeOrmConfigService.html",[30,2.004,46,0.146]],["body/classes/TypeOrmConfigService.html",[12,0.033,18,0.41,19,0.355,20,0.25,23,0.519,28,1.817,30,3.124,45,0.41,46,0.18,47,0.021,48,0.026,49,0.021,74,1.065,76,0.469,77,1.605,82,0.732,93,1.27,115,1.515,207,3.124,314,3.224,315,5.376,316,5.649,317,3.879,318,5.376,319,4.903,320,3.879]],["title/classes/User.html",[46,0.146,106,0.943]],["body/classes/User.html",[12,0.034,18,0.225,19,0.195,20,0.137,23,0.225,38,2.466,43,2.483,45,0.225,46,0.099,47,0.011,48,0.017,49,0.011,74,0.585,76,0.257,82,1.037,85,0.885,89,2.347,106,0.968,128,1.697,129,2.011,131,1.826,150,1.379,163,3.616,168,3.885,169,2.834,171,4.567,172,2.684,173,0.998,175,4.248,233,2.484,234,2.484,255,2.807,258,3.24,259,3.542,260,3.24,261,3.79,262,3.24,263,3.24,264,3.24,265,2.684,267,2.684,321,1.771,322,2.13,323,2.13,324,2.13,325,2.13,326,3.228,327,2.13,328,2.13,329,2.13,330,2.13,331,2.13,332,2.13,333,2.13]],["title/classes/User-1.html",[46,0.122,106,0.791,334,1.899]],["body/classes/User-1.html",[12,0.033,18,0.355,19,0.307,20,0.216,23,0.355,26,1.198,45,0.355,46,0.155,47,0.018,48,0.024,49,0.018,74,0.92,76,0.405,82,1.009,85,0.818,89,2.283,106,1.338,128,1.779,131,2.349,150,1.906,151,3.826,154,3.708,233,3.194,234,3.194,255,3.61,335,2.787,336,3.352,337,3.352,338,3.352,339,3.352]],["title/modules/UsersModule.html",[0,1.228,14,1.623]],["body/modules/UsersModule.html",[0,1.884,2,1.456,3,1.456,4,1.774,5,1.774,6,1.456,7,2.754,8,2.754,12,0.034,13,2.886,14,3.049,15,2.42,16,1.774,17,1.774,18,0.329,19,0.284,20,0.2,22,2.701,23,0.592,24,0.853,27,2.238,28,1.456,45,0.329,46,0.144,47,0.017,48,0.023,49,0.017,106,0.932,122,2.85,340,2.583,341,2.583,342,2.583,343,3.107,344,3.107,345,3.107,346,2.583,347,2.701,348,3.107,349,2.583,350,3.107]],["title/classes/UsersResolver.html",[46,0.146,347,2.004]],["body/classes/UsersResolver.html",[12,0.034,18,0.237,19,0.205,20,0.145,23,0.566,24,0.616,26,0.802,42,1.206,45,0.237,46,0.104,47,0.012,48,0.018,49,0.012,74,0.616,76,0.271,77,1.099,78,1.959,80,1.572,82,0.843,84,1.437,85,0.615,86,1.437,89,1.718,93,1.317,94,1.907,96,1.864,97,3.343,98,2.417,103,2.417,105,1.157,106,1.433,107,1.718,115,1.57,121,1.864,122,2.35,128,1.206,135,2.138,179,2.436,231,2.968,273,1.429,281,1.429,282,1.615,347,2.138,349,1.864,351,1.864,352,3.343,353,3.356,354,4.463,355,2.242,356,1.864,357,2.242,358,2.242,359,2.844,360,2.242,361,2.242,362,2.242,363,2.242,364,2.242,365,2.242,366,3.356,367,2.242,368,2.242,369,2.242,370,1.864,371,2.242,372,3.356,373,2.242,374,2.242,375,2.242,376,2.242,377,2.242,378,2.242,379,2.242,380,2.242]],["title/injectables/UsersService.html",[117,0.943,122,1.474]],["body/injectables/UsersService.html",[12,0.034,18,0.231,19,0.199,20,0.14,23,0.525,24,0.598,28,1.021,38,1.021,42,1.319,45,0.231,46,0.101,47,0.012,48,0.018,49,0.012,76,0.263,77,1.075,78,2.118,80,1.539,82,0.831,84,1.573,85,0.673,86,1.573,93,1.294,94,2.12,105,2.038,106,1.415,107,1.403,112,2.803,115,1.543,117,0.985,118,1.124,122,1.539,128,1.185,131,1.539,132,2.365,135,1.388,140,2.73,144,2.73,173,1.021,191,3.168,196,1.811,219,2.365,231,2.94,259,2.365,346,1.811,352,2.73,356,2.73,359,2.092,370,1.811,381,1.569,382,3.284,383,2.179,384,2.179,385,3.284,386,3.284,387,2.179,388,2.179,389,3.284,390,2.179,391,2.846,392,1.811,393,2.179,394,2.179,395,3.284,396,3.284,397,3.284,398,3.284,399,3.284,400,3.284,401,3.284,402,3.284,403,2.179]],["title/coverage.html",[404,3.553]],["body/coverage.html",[6,1.152,12,0.034,20,0.159,30,1.567,46,0.27,47,0.013,48,0.019,49,0.013,54,1.268,55,1.404,62,1.567,65,1.567,75,2.044,85,0.376,88,1.567,99,1.567,106,1.077,112,1.567,117,1.489,119,2.044,122,1.152,149,2.044,155,1.268,156,2.044,179,1.152,181,1.567,186,2.044,187,2.044,204,1.771,205,2.044,206,2.044,220,1.771,231,1.404,232,2.044,249,1.771,250,2.044,251,2.044,269,2.044,272,1.771,273,1.567,275,2.044,281,1.567,282,1.771,283,2.044,295,2.044,314,2.044,321,2.044,335,2.044,347,1.567,351,2.044,359,2.289,381,2.587,391,1.771,404,2.044,405,2.459,406,2.459,407,2.459,408,6.22,409,4.965,410,4.667,411,2.986,412,4.965,413,5.355,414,3.592,415,4.965,416,2.044,417,2.459,418,2.986,419,2.044,420,2.459,421,2.459]],["title/dependencies.html",[3,1.77,422,2.636]],["body/dependencies.html",[3,1.55,12,0.034,24,0.908,26,1.183,28,1.55,46,0.205,47,0.018,48,0.024,49,0.018,58,2.383,60,2.108,132,2.383,173,1.55,247,2.751,303,4.14,304,2.751,423,4.98,424,3.309,425,3.309,426,3.309,427,4.422,428,3.309,429,4.422,430,3.309,431,3.309,432,3.309,433,3.309,434,3.309,435,3.309,436,3.309,437,3.309,438,3.309,439,4.422,440,3.309,441,3.309,442,3.309,443,3.309,444,3.309,445,2.751,446,3.309,447,3.309,448,3.309,449,3.309,450,3.309,451,3.309,452,3.309,453,3.309,454,3.309,455,3.309,456,3.309]],["title/miscellaneous/enumerations.html",[457,1.36,458,3.141]],["body/miscellaneous/enumerations.html",[12,0.032,47,0.024,48,0.028,49,0.024,76,0.53,128,1.317,158,3.245,162,3.162,166,4.4,229,3.65,261,3.162,334,3.162,457,2.265,458,3.65,459,4.39,460,4.39,461,4.39]],["title/miscellaneous/functions.html",[457,1.36,462,3.141]],["body/miscellaneous/functions.html",[6,2.737,12,0.03,47,0.025,48,0.03,49,0.025,76,0.566,416,3.896,457,2.417,462,3.896,463,4.686]],["title/index.html",[76,0.319,464,2.636,465,2.192]],["body/index.html",[12,0.031,19,0.256,20,0.181,47,0.015,48,0.021,49,0.015,85,0.429,112,1.784,191,3.287,445,3.278,465,2.328,466,3.943,467,4.564,468,2.8,469,2.8,470,4.564,471,3.943,472,3.943,473,2.8,474,2.8,475,2.8,476,2.8,477,2.8,478,2.8,479,2.8,480,2.8,481,2.8,482,2.8,483,3.943,484,2.8,485,2.8,486,2.8,487,4.119,488,2.8,489,2.328,490,3.943,491,4.954,492,4.564,493,3.943,494,3.943,495,3.943,496,5.417,497,3.943,498,3.943,499,3.943,500,3.943,501,3.943,502,3.943,503,2.8,504,2.8,505,2.8,506,2.8,507,2.8,508,2.8,509,2.8,510,2.328,511,2.8,512,2.8,513,2.8,514,3.943,515,4.564,516,2.8,517,2.8,518,2.8,519,2.8,520,3.943,521,2.8,522,2.8,523,2.8,524,2.8,525,2.8,526,2.8,527,2.8,528,2.8,529,2.8,530,2.8]],["title/modules.html",[2,2.002]],["body/modules.html",[1,2.766,2,2.034,11,2.478,12,0.028,13,2.239,14,2.239,47,0.023,48,0.028,49,0.023,531,5.877,532,5.877,533,5.877,534,5.877]],["title/overview.html",[535,3.553]],["body/overview.html",[0,1.166,1,3.679,2,1.399,3,1.399,4,1.705,5,1.705,6,1.399,7,1.705,8,1.705,9,2.482,10,2.482,11,3.387,12,0.033,13,2.923,14,3.023,15,2.355,16,1.705,17,1.705,47,0.016,48,0.022,49,0.016,50,2.482,52,2.482,53,2.482,54,2.923,55,2.697,74,0.82,118,1.54,122,2.655,176,2.482,177,2.482,178,2.482,179,2.655,272,2.151,334,2.151,340,2.482,341,2.482,342,2.482,535,2.482,536,2.986,537,2.986,538,2.986]],["title/miscellaneous/variables.html",[457,1.36,539,3.141]],["body/miscellaneous/variables.html",[12,0.034,20,0.166,38,1.74,43,2.487,47,0.014,48,0.02,49,0.014,65,2.367,69,2.14,76,0.311,85,0.806,129,1.328,143,1.854,158,2.487,162,1.854,169,1.916,359,3.039,381,1.854,391,2.675,392,3.087,411,2.14,418,2.14,419,3.087,457,1.328,487,2.14,489,2.14,510,3.622,539,2.14,540,2.574,541,3.714,542,3.714,543,2.574,544,2.574,545,2.574,546,2.574,547,2.574,548,2.574,549,2.574,550,2.574,551,2.574,552,2.574,553,2.574,554,4.356,555,2.574,556,4.769,557,3.714,558,2.574,559,4.356,560,4.356,561,2.574,562,2.574,563,2.574,564,2.574,565,2.574,566,3.714,567,2.574,568,3.714,569,2.574,570,2.574,571,2.574,572,2.574,573,2.574,574,2.574,575,2.574,576,3.714,577,3.714,578,2.574,579,3.714,580,2.574,581,2.574,582,2.574,583,2.574,584,2.574,585,2.574,586,2.574,587,2.574,588,2.574,589,2.574,590,2.574]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":334,"title":{"classes/User-1.html":{}},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":538,"title":{},"body":{"overview.html":{}}}],["15.5.0",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":461,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2.23.0",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":229,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.2",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":536,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":537,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.0.4",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["7.10.6",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["8.6.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["aims",{"_index":473,"title":{},"body":{"index.html":{}}}],["allow",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":529,"title":{},"body":{"index.html":{}}}],["api",{"_index":467,"title":{},"body":{"index.html":{}}}],["api.git",{"_index":500,"title":{},"body":{"index.html":{}}}],["api.gitthen",{"_index":502,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["application",{"_index":472,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":96,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["args('creditentials",{"_index":104,"title":{},"body":{"classes/AuthResolver.html":{}}}],["args('user",{"_index":378,"title":{},"body":{"classes/UsersResolver.html":{}}}],["async",{"_index":78,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["auth.guard",{"_index":367,"title":{},"body":{"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":283,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:7",{"_index":287,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.resolver",{"_index":63,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticateduser",{"_index":99,"title":{"classes/AuthenticatedUser.html":{}},"body":{"classes/AuthResolver.html":{},"classes/AuthenticatedUser.html":{},"coverage.html":{}}}],["authguard",{"_index":289,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":291,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authresolver",{"_index":62,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":54,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoschemafile",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":481,"title":{},"body":{"index.html":{}}}],["await",{"_index":107,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["bcrypt",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":400,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt_salt",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["birthday",{"_index":258,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{}}}],["boolean",{"_index":261,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bring",{"_index":474,"title":{},"body":{"index.html":{}}}],["browse",{"_index":534,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":531,"title":{},"body":{"modules.html":{}}}],["canactivate",{"_index":276,"title":{},"body":{"guards/InstallationGuard.html":{}}}],["character",{"_index":221,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["class",{"_index":46,"title":{"classes/AuthResolver.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"classes/ConfigurationResolver.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":74,"title":{},"body":{"classes/AuthResolver.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"classes/ConfigurationResolver.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cli",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clone",{"_index":491,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":50,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":53,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":51,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":52,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configurationmodule",{"_index":176,"title":{},"body":{"modules/ConfigurationModule.html":{},"overview.html":{}}}],["cluster_configurationmodule_exports",{"_index":177,"title":{},"body":{"modules/ConfigurationModule.html":{},"overview.html":{}}}],["cluster_configurationmodule_providers",{"_index":178,"title":{},"body":{"modules/ConfigurationModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":340,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":342,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":343,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":341,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":171,"title":{},"body":{"classes/Configuration.html":{},"classes/User.html":{}}}],["column({nullable",{"_index":168,"title":{},"body":{"classes/Configuration.html":{},"classes/User.html":{}}}],["column({type",{"_index":163,"title":{},"body":{"classes/Configuration.html":{},"classes/User.html":{}}}],["compiled",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.service",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":155,"title":{"classes/Configuration.html":{}},"body":{"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"coverage.html":{}}}],["configuration.resolver",{"_index":182,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["configuration.service",{"_index":183,"title":{},"body":{"modules/ConfigurationModule.html":{},"guards/InstallationGuard.html":{}}}],["configuration.value",{"_index":202,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["configuration/configuration.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["configurationmodule",{"_index":13,"title":{"modules/ConfigurationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["configurationrepository",{"_index":193,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["configurationresolver",{"_index":181,"title":{"classes/ConfigurationResolver.html":{}},"body":{"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"coverage.html":{}}}],["configurationservice",{"_index":179,"title":{"injectables/ConfigurationService.html":{}},"body":{"modules/ConfigurationModule.html":{},"injectables/ConfigurationService.html":{},"guards/InstallationGuard.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"overview.html":{}}}],["configured",{"_index":530,"title":{},"body":{"index.html":{}}}],["connectionoptions",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(user",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":105,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"injectables/JwtAuthGuard.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constants",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constraint",{"_index":223,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"guards/InstallationGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":81,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(configurationrepository",{"_index":190,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["constructor(configurationservice",{"_index":277,"title":{},"body":{"guards/InstallationGuard.html":{}}}],["constructor(private",{"_index":102,"title":{},"body":{"classes/AuthResolver.html":{},"guards/InstallationGuard.html":{}}}],["constructor(usersrepository",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{}}}],["container",{"_index":490,"title":{},"body":{"index.html":{}}}],["containers",{"_index":509,"title":{},"body":{"index.html":{}}}],["context",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{}}}],["copy",{"_index":521,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":404,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":219,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"injectables/UsersService.html":{}}}],["create(data",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["createconfigurationtable.ts",{"_index":206,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"coverage.html":{}}}],["createconfigurationtable.ts:23",{"_index":215,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{}}}],["createconfigurationtable.ts:5",{"_index":212,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{}}}],["createconfigurationtable.ts:7",{"_index":217,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{}}}],["createconfigurationtable1619857346529",{"_index":204,"title":{"classes/CreateConfigurationTable1619857346529.html":{}},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"coverage.html":{}}}],["createdat",{"_index":264,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{}}}],["createdefaultadminuser",{"_index":352,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["createdefaultadminuser(data",{"_index":356,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["createtypeormoptions",{"_index":316,"title":{},"body":{"classes/TypeOrmConfigService.html":{}}}],["createuser",{"_index":353,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('user",{"_index":375,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(data",{"_index":360,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserdto",{"_index":231,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createusertable.ts",{"_index":251,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"coverage.html":{}}}],["createusertable.ts:12",{"_index":253,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{}}}],["createusertable.ts:4",{"_index":252,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{}}}],["createusertable.ts:6",{"_index":254,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{}}}],["createusertable1619763498661",{"_index":249,"title":{"classes/CreateUserTable1619763498661.html":{}},"body":{"classes/CreateUserTable1619763498661.html":{},"coverage.html":{}}}],["creditentialinput",{"_index":88,"title":{"classes/CreditentialInput.html":{}},"body":{"classes/AuthResolver.html":{},"classes/CreditentialInput.html":{},"coverage.html":{}}}],["creditentials",{"_index":92,"title":{},"body":{"classes/AuthResolver.html":{}}}],["creditentials.email",{"_index":109,"title":{},"body":{"classes/AuthResolver.html":{}}}],["creditentials.password",{"_index":110,"title":{},"body":{"classes/AuthResolver.html":{}}}],["ctrl",{"_index":505,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":292,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["ctx.getcontext().req",{"_index":294,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["data",{"_index":359,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.database_host",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.database_name",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.database_password",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.database_user",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.email",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.firstname",{"_index":397,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.jwt_secret",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.lastname",{"_index":399,"title":{},"body":{"injectables/UsersService.html":{}}}],["database",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":259,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":89,"title":{},"body":{"classes/AuthResolver.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"classes/CreateUserDto.html":{},"classes/CreditentialInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":82,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":489,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["devcontainer",{"_index":504,"title":{},"body":{"index.html":{}}}],["devcontainers",{"_index":526,"title":{},"body":{"index.html":{}}}],["development",{"_index":470,"title":{},"body":{"index.html":{}}}],["directly",{"_index":514,"title":{},"body":{"index.html":{}}}],["disable",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docker",{"_index":517,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":476,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":210,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["down(queryrunner",{"_index":213,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["dto/authenticateduser.output",{"_index":100,"title":{},"body":{"classes/AuthResolver.html":{}}}],["dto/creaditentialinput",{"_index":101,"title":{},"body":{"classes/AuthResolver.html":{}}}],["dto/createuser.dto",{"_index":370,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["edit",{"_index":528,"title":{},"body":{"index.html":{}}}],["email",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UsersService.html":{}}}],["entities",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":172,"title":{},"body":{"classes/Configuration.html":{},"classes/User.html":{}}}],["entity/configuration.entity",{"_index":184,"title":{},"body":{"modules/ConfigurationModule.html":{},"injectables/ConfigurationService.html":{}}}],["entity{.ts,.js",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":165,"title":{},"body":{"classes/Configuration.html":{}}}],["enumerations",{"_index":458,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":523,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":522,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":286,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expiresin",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":290,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":169,"title":{},"body":{"classes/Configuration.html":{},"injectables/ConfigurationService.html":{},"classes/CreateUserTable1619763498661.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":151,"title":{},"body":{"classes/AuthenticatedUser.html":{},"classes/CreateUserDto.html":{},"classes/CreditentialInput.html":{},"classes/User-1.html":{}}}],["field()@isemail()@isnotempty",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["field()@isstring()@isnotempty",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["field()@isstring()@isnotempty()@minlength(4",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fill",{"_index":524,"title":{},"body":{"index.html":{}}}],["findone",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(email",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["folder",{"_index":510,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":462,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getrequest",{"_index":284,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getrequest(context",{"_index":285,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["getting",{"_index":464,"title":{"index.html":{}},"body":{}}],["gh",{"_index":493,"title":{},"body":{"index.html":{}}}],["git@github.com:torvald",{"_index":499,"title":{},"body":{"index.html":{}}}],["global",{"_index":200,"title":{},"body":{"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{}}}],["gqlexecutioncontext",{"_index":288,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":293,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["graphql",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["guard",{"_index":272,"title":{"guards/InstallationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":274,"title":{},"body":{"guards/InstallationGuard.html":{}}}],["hello",{"_index":373,"title":{},"body":{"classes/UsersResolver.html":{}}}],["helloworld",{"_index":354,"title":{},"body":{"classes/UsersResolver.html":{}}}],["host",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/torvald",{"_index":501,"title":{},"body":{"index.html":{}}}],["id",{"_index":255,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["identifier",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":207,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"classes/TypeOrmConfigService.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":76,"title":{"index.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["informations",{"_index":525,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":117,"title":{"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":196,"title":{},"body":{"injectables/ConfigurationService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(configuration",{"_index":197,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["injectrepository(user",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["inputtype",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreditentialInput.html":{}}}],["insert",{"_index":227,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{}}}],["inside",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":515,"title":{},"body":{"index.html":{}}}],["installationguard",{"_index":273,"title":{"guards/InstallationGuard.html":{}},"body":{"guards/InstallationGuard.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["integrations",{"_index":480,"title":{},"body":{"index.html":{}}}],["interfaces/settings.type",{"_index":174,"title":{},"body":{"classes/Configuration.html":{}}}],["isactive",{"_index":262,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{}}}],["isadmin",{"_index":260,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{}}}],["isapplicationrequireinstallation",{"_index":188,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["isemail",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["jobtitle",{"_index":263,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{}}}],["js",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":281,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":57,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":55,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":226,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["lastname",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["launch",{"_index":503,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["let's",{"_index":519,"title":{},"body":{"index.html":{}}}],["local",{"_index":445,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["location",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":79,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["login(creditentials",{"_index":87,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(user",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["machine",{"_index":492,"title":{},"body":{"index.html":{}}}],["maj",{"_index":506,"title":{},"body":{"index.html":{}}}],["manage",{"_index":469,"title":{},"body":{"index.html":{}}}],["management",{"_index":478,"title":{},"body":{"index.html":{}}}],["manually",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":498,"title":{},"body":{"index.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["migration",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":208,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["migrations",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/*{.ts,.js",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":457,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":482,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mutation",{"_index":97,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":90,"title":{},"body":{"classes/AuthResolver.html":{}}}],["name",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/Configuration.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":520,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"modules/ConfigurationModule.html":{},"injectables/ConfigurationService.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/AuthenticatedUser.html":{},"classes/ConfigurationResolver.html":{},"classes/CreateUserDto.html":{},"classes/CreditentialInput.html":{},"injectables/JwtAuthGuard.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":58,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":60,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"injectables/ConfigurationService.html":{},"classes/TypeOrmConfigService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":112,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["node.js",{"_index":513,"title":{},"body":{"index.html":{}}}],["now",{"_index":511,"title":{},"body":{"index.html":{}}}],["null",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["nullable",{"_index":175,"title":{},"body":{"classes/Configuration.html":{},"classes/User.html":{}}}],["number",{"_index":162,"title":{},"body":{"classes/Configuration.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objecttype",{"_index":154,"title":{},"body":{"classes/AuthenticatedUser.html":{},"classes/User-1.html":{}}}],["open",{"_index":471,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ormconfig",{"_index":320,"title":{},"body":{"classes/TypeOrmConfigService.html":{}}}],["ormmodule",{"_index":319,"title":{},"body":{"classes/TypeOrmConfigService.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":535,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":507,"title":{},"body":{"index.html":{}}}],["package",{"_index":422,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":84,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["parseint(data.database_port",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":59,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["passwordmatching",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["pk_9bfa165ae0185c0617b5e81b41a",{"_index":224,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{}}}],["pk_cace4a159ff9f2512dd42373760",{"_index":268,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{}}}],["port",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possible",{"_index":486,"title":{},"body":{"index.html":{}}}],["postgres",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":516,"title":{},"body":{"index.html":{}}}],["prefer",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefered",{"_index":497,"title":{},"body":{"index.html":{}}}],["primary",{"_index":225,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["primarycolumn",{"_index":159,"title":{},"body":{"classes/Configuration.html":{}}}],["primarygeneratedcolumn",{"_index":333,"title":{},"body":{"classes/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":326,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["process.env.node_env",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":477,"title":{},"body":{"index.html":{}}}],["promise",{"_index":94,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":150,"title":{},"body":{"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":209,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["query",{"_index":366,"title":{},"body":{"classes/UsersResolver.html":{}}}],["queryrunner",{"_index":214,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["queryrunner.query",{"_index":218,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["queryrunner.query(`drop",{"_index":230,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["readonly",{"_index":103,"title":{},"body":{"classes/AuthResolver.html":{},"guards/InstallationGuard.html":{},"classes/UsersResolver.html":{}}}],["ready",{"_index":512,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["remote",{"_index":508,"title":{},"body":{"index.html":{}}}],["repo",{"_index":494,"title":{},"body":{"index.html":{}}}],["repository",{"_index":191,"title":{},"body":{"injectables/ConfigurationService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["requireinstallation",{"_index":198,"title":{},"body":{"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{}}}],["requireinstallation.value",{"_index":201,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":98,"title":{},"body":{"classes/AuthResolver.html":{},"classes/ConfigurationResolver.html":{},"classes/UsersResolver.html":{}}}],["result",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":115,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":93,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["running",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["schema.gql",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["secret",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":157,"title":{},"body":{"classes/Configuration.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{}}}],["server",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting_type",{"_index":166,"title":{},"body":{"classes/Configuration.html":{},"miscellaneous/enumerations.html":{}}}],["several",{"_index":484,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{}}}],["smallint",{"_index":164,"title":{},"body":{"classes/Configuration.html":{},"classes/CreateConfigurationTable1619857346529.html":{}}}],["solutions",{"_index":485,"title":{},"body":{"index.html":{}}}],["sortschema",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"modules/ConfigurationModule.html":{},"classes/ConfigurationResolver.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/TypeOrmConfigService.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["src",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.type.ts",{"_index":459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.service.ts",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":56,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":75,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:12",{"_index":91,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:8",{"_index":83,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/authenticateduser.output.ts",{"_index":149,"title":{},"body":{"classes/AuthenticatedUser.html":{},"coverage.html":{}}}],["src/auth/dto/authenticateduser.output.ts:10",{"_index":152,"title":{},"body":{"classes/AuthenticatedUser.html":{}}}],["src/auth/dto/authenticateduser.output.ts:7",{"_index":153,"title":{},"body":{"classes/AuthenticatedUser.html":{}}}],["src/auth/dto/creaditentialinput.ts",{"_index":269,"title":{},"body":{"classes/CreditentialInput.html":{},"coverage.html":{}}}],["src/auth/dto/creaditentialinput.ts:6",{"_index":270,"title":{},"body":{"classes/CreditentialInput.html":{}}}],["src/auth/dto/creaditentialinput.ts:9",{"_index":271,"title":{},"body":{"classes/CreditentialInput.html":{}}}],["src/auth/jwt",{"_index":282,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config.service.ts",{"_index":314,"title":{},"body":{"classes/TypeOrmConfigService.html":{},"coverage.html":{}}}],["src/config.service.ts:5",{"_index":317,"title":{},"body":{"classes/TypeOrmConfigService.html":{}}}],["src/configuration/configuration.module",{"_index":345,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/configuration/configuration.module.ts",{"_index":180,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["src/configuration/configuration.resolver.ts",{"_index":186,"title":{},"body":{"classes/ConfigurationResolver.html":{},"coverage.html":{}}}],["src/configuration/configuration.service",{"_index":368,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/configuration/configuration.service.ts",{"_index":187,"title":{},"body":{"injectables/ConfigurationService.html":{},"coverage.html":{}}}],["src/configuration/configuration.service.ts:13",{"_index":194,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/configuration/configuration.service.ts:22",{"_index":195,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/configuration/configuration.service.ts:7",{"_index":192,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["src/configuration/entity/configuration.entity.ts",{"_index":156,"title":{},"body":{"classes/Configuration.html":{},"coverage.html":{}}}],["src/configuration/entity/configuration.entity.ts:10",{"_index":160,"title":{},"body":{"classes/Configuration.html":{}}}],["src/configuration/entity/configuration.entity.ts:13",{"_index":170,"title":{},"body":{"classes/Configuration.html":{}}}],["src/configuration/entity/configuration.entity.ts:16",{"_index":167,"title":{},"body":{"classes/Configuration.html":{}}}],["src/configuration/entity/configuration.entity.ts:7",{"_index":161,"title":{},"body":{"classes/Configuration.html":{}}}],["src/configuration/guards/installation.guard",{"_index":369,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/configuration/guards/installation.guard.ts",{"_index":275,"title":{},"body":{"guards/InstallationGuard.html":{},"coverage.html":{}}}],["src/configuration/guards/installation.guard.ts:5",{"_index":278,"title":{},"body":{"guards/InstallationGuard.html":{}}}],["src/configuration/guards/installation.guard.ts:8",{"_index":279,"title":{},"body":{"guards/InstallationGuard.html":{}}}],["src/configuration/interfaces/settings.type.ts",{"_index":460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/migrations/1619763498661",{"_index":250,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"coverage.html":{}}}],["src/migrations/1619857346529",{"_index":205,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"coverage.html":{}}}],["src/ormconfig.ts",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/createuser.dto.ts",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/createuser.dto.ts:14",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dto/createuser.dto.ts:19",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dto/createuser.dto.ts:25",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dto/createuser.dto.ts:9",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.entity.ts",{"_index":321,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:11",{"_index":331,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:14",{"_index":324,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:17",{"_index":332,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:20",{"_index":322,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:23",{"_index":329,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:26",{"_index":328,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:29",{"_index":330,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:32",{"_index":323,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:5",{"_index":327,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:8",{"_index":325,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.model",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{}}}],["src/users/user.model.ts",{"_index":335,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["src/users/user.model.ts:12",{"_index":339,"title":{},"body":{"classes/User-1.html":{}}}],["src/users/user.model.ts:15",{"_index":336,"title":{},"body":{"classes/User-1.html":{}}}],["src/users/user.model.ts:6",{"_index":338,"title":{},"body":{"classes/User-1.html":{}}}],["src/users/user.model.ts:9",{"_index":337,"title":{},"body":{"classes/User-1.html":{}}}],["src/users/users.module",{"_index":61,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":344,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.resolver.ts",{"_index":351,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/users/users.resolver.ts:11",{"_index":355,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:19",{"_index":364,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:25",{"_index":362,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:31",{"_index":358,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.service",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:11",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":483,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:prod",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":465,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["strategy",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":532,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":533,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":220,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["this.authservice.login(user",{"_index":114,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.validateuser",{"_index":108,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.configurationrepository.findone",{"_index":199,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["this.configurationrepository.save(configuration",{"_index":203,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["this.configurationservice.isapplicationrequireinstallation",{"_index":280,"title":{},"body":{"guards/InstallationGuard.html":{}}}],["this.configurationservice.unsetrequireinstallation",{"_index":380,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.jwtservice.sign(payload",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersrepository.findone",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":402,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(data",{"_index":376,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.createdefaultadminuser(data",{"_index":379,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(email",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":111,"title":{},"body":{"classes/AuthResolver.html":{}}}],["timestamp",{"_index":265,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{}}}],["token",{"_index":113,"title":{},"body":{"classes/AuthResolver.html":{},"classes/AuthenticatedUser.html":{}}}],["token.access_token",{"_index":116,"title":{},"body":{"classes/AuthResolver.html":{}}}],["tools",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["torvald",{"_index":495,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":85,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/Configuration.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/CreditentialInput.html":{},"guards/InstallationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":173,"title":{},"body":{"classes/Configuration.html":{},"injectables/ConfigurationService.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormconfigservice",{"_index":30,"title":{"classes/TypeOrmConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/TypeOrmConfigService.html":{},"coverage.html":{}}}],["typeormmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([configuration",{"_index":185,"title":{},"body":{"modules/ConfigurationModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":350,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":318,"title":{},"body":{"classes/TypeOrmConfigService.html":{}}}],["typeormoptionsfactory",{"_index":315,"title":{},"body":{"classes/TypeOrmConfigService.html":{}}}],["unauthorizedexception",{"_index":95,"title":{},"body":{"classes/AuthResolver.html":{}}}],["unique",{"_index":267,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{}}}],["unsetrequireinstallation",{"_index":189,"title":{},"body":{"injectables/ConfigurationService.html":{}}}],["up",{"_index":211,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["up(queryrunner",{"_index":216,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["uq_e12875dfb3b1d92d7d7c5377e22",{"_index":266,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{}}}],["use",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":468,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":365,"title":{},"body":{"classes/UsersResolver.html":{}}}],["useguards(installationguard",{"_index":377,"title":{},"body":{"classes/UsersResolver.html":{}}}],["useguards(installationguard)@mutation(undefined",{"_index":357,"title":{},"body":{"classes/UsersResolver.html":{}}}],["useguards(jwtauthguard",{"_index":372,"title":{},"body":{"classes/UsersResolver.html":{}}}],["useguards(jwtauthguard)@mutation(undefined",{"_index":361,"title":{},"body":{"classes/UsersResolver.html":{}}}],["useguards(jwtauthguard)@query(undefined",{"_index":363,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user",{"_index":106,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUser.html":{},"classes/CreateUserTable1619763498661.html":{},"classes/User.html":{},"classes/User-1.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.createdat",{"_index":401,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.email",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.entity",{"_index":346,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.firstname",{"_index":396,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isadmin",{"_index":403,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.lastname",{"_index":398,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.model",{"_index":371,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user.password",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":527,"title":{},"body":{"index.html":{}}}],["users.resolver",{"_index":348,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":349,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":14,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersresolver",{"_index":347,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":122,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":487,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":256,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{}}}],["uuid_generate_v4",{"_index":257,"title":{},"body":{"classes/CreateUserTable1619763498661.html":{}}}],["validate",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":158,"title":{},"body":{"classes/Configuration.html":{},"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":228,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{}}}],["variable",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":539,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":479,"title":{},"body":{"index.html":{}}}],["varying",{"_index":222,"title":{},"body":{"classes/CreateConfigurationTable1619857346529.html":{},"classes/CreateUserTable1619763498661.html":{}}}],["vscode",{"_index":488,"title":{},"body":{"index.html":{}}}],["way",{"_index":475,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":466,"title":{},"body":{"index.html":{}}}],["workflow/graphql",{"_index":496,"title":{},"body":{"index.html":{}}}],["world",{"_index":374,"title":{},"body":{"classes/UsersResolver.html":{}}}],["yarn",{"_index":518,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigurationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigurationModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from './auth/auth.module';\nimport { TypeOrmConfigService } from './config.service';\nimport { ConfigurationModule } from './configuration/configuration.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigurationModule,\n    UsersModule,\n    GraphQLModule.forRoot({\n      autoSchemaFile: 'schema.gql',\n      sortSchema: true,\n      context: ({ req }) => ({ req }),\n    }),\n    TypeOrmModule.forRootAsync({\n      name: 'default',\n      imports: [TypeOrmConfigService],\n      useClass: TypeOrmConfigService,\n    }),\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthResolver } from './auth.resolver';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  providers: [AuthService, AuthResolver, JwtStrategy],\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(creditentials: CreditentialInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creditentials\n                                    \n                                                CreditentialInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\nimport { Args, Mutation, Resolver } from '@nestjs/graphql';\nimport { AuthService } from './auth.service';\nimport { AuthenticatedUser } from './dto/authenticatedUser.output';\nimport { CreditentialInput } from './dto/creaditentialInput';\n\n@Resolver()\nexport class AuthResolver {\n  constructor(private readonly authService: AuthService) {}\n\n  @Mutation(() => AuthenticatedUser)\n  async login(\n    @Args('creditentials') creditentials: CreditentialInput,\n  ): Promise {\n    const user = await this.authService.validateUser(\n      creditentials.email,\n      creditentials.password,\n    );\n\n    if (!user) throw new UnauthorizedException();\n\n    const token = await this.authService.login(user);\n\n    return { user, token: token.access_token };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { User } from 'src/users/user.model';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, password: string): Promise {\n    const user = await this.usersService.findOne(email);\n\n    if (!user) return null;\n\n    const passwordMatching = await bcrypt.compare(password, user.password);\n\n    if (passwordMatching) return user;\n\n    return null;\n  }\n\n  async login(user: User) {\n    console.log(user);\n    const payload = { username: user.email, sub: user.id };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticatedUser.html":{"url":"classes/AuthenticatedUser.html","title":"class - AuthenticatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/authenticatedUser.output.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/authenticatedUser.output.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/authenticatedUser.output.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { User } from 'src/users/user.model';\n\n@ObjectType()\nexport class AuthenticatedUser {\n  @Field()\n  user: User;\n\n  @Field()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Configuration.html":{"url":"classes/Configuration.html","title":"class - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration/entity/configuration.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                section\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/configuration/entity/configuration.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            section\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/configuration/entity/configuration.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'smallint', enum: SETTING_TYPE})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/configuration/entity/configuration.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/configuration/entity/configuration.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn } from 'typeorm';\nimport { SETTING_TYPE } from '../interfaces/settings.type';\n\n@Entity()\nexport class Configuration {\n  @PrimaryColumn()\n  section: string;\n\n  @PrimaryColumn()\n  name: string;\n\n  @Column({ nullable: false })\n  value: string;\n\n  @Column({ type: 'smallint', enum: SETTING_TYPE })\n  type: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigurationModule.html":{"url":"modules/ConfigurationModule.html","title":"module - ConfigurationModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigurationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigurationModule\n\n\n\ncluster_ConfigurationModule_exports\n\n\n\ncluster_ConfigurationModule_providers\n\n\n\n\nConfigurationService \n\nConfigurationService \n\n\n\nConfigurationModule\n\nConfigurationModule\n\nConfigurationService  -->\n\nConfigurationModule->ConfigurationService \n\n\n\n\n\nConfigurationService\n\nConfigurationService\n\nConfigurationModule -->\n\nConfigurationService->ConfigurationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configuration/configuration.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigurationService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigurationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigurationResolver } from './configuration.resolver';\nimport { ConfigurationService } from './configuration.service';\nimport { Configuration } from './entity/configuration.entity';\n\n@Module({\n  providers: [ConfigurationResolver, ConfigurationService],\n  exports: [ConfigurationService],\n  imports: [TypeOrmModule.forFeature([Configuration])],\n})\nexport class ConfigurationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigurationResolver.html":{"url":"classes/ConfigurationResolver.html","title":"class - ConfigurationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigurationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration/configuration.resolver.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class ConfigurationResolver {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigurationService.html":{"url":"injectables/ConfigurationService.html","title":"injectable - ConfigurationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigurationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration/configuration.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isApplicationRequireInstallation\n                            \n                            \n                                    Async\n                                unsetRequireInstallation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configurationRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/configuration/configuration.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isApplicationRequireInstallation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isApplicationRequireInstallation()\n                \n            \n\n\n            \n                \n                    Defined in src/configuration/configuration.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unsetRequireInstallation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsetRequireInstallation()\n                \n            \n\n\n            \n                \n                    Defined in src/configuration/configuration.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Configuration } from './entity/configuration.entity';\n\n@Injectable()\nexport class ConfigurationService {\n  constructor(\n    @InjectRepository(Configuration)\n    private configurationRepository: Repository,\n  ) {}\n\n  async isApplicationRequireInstallation(): Promise {\n    const requireInstallation = await this.configurationRepository.findOne({\n      section: 'global',\n      name: 'requireInstallation',\n    });\n\n    return requireInstallation.value === 'true';\n  }\n\n  async unsetRequireInstallation(): Promise {\n    const configuration = await this.configurationRepository.findOne({\n      section: 'global',\n      name: 'requireInstallation',\n    });\n\n    configuration.value = 'false';\n\n    return this.configurationRepository.save(configuration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateConfigurationTable1619857346529.html":{"url":"classes/CreateConfigurationTable1619857346529.html","title":"class - CreateConfigurationTable1619857346529","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateConfigurationTable1619857346529\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1619857346529-CreateConfigurationTable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CreateConfigurationTable1619857346529'\n                        \n                    \n                        \n                            \n                                    Defined in src/migrations/1619857346529-CreateConfigurationTable.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1619857346529-CreateConfigurationTable.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1619857346529-CreateConfigurationTable.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateConfigurationTable1619857346529\n  implements MigrationInterface {\n  name = 'CreateConfigurationTable1619857346529';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"configuration\" (\"section\" character varying NOT NULL, \"name\" character varying NOT NULL, \"value\" character varying NOT NULL, \"type\" smallint NOT NULL, CONSTRAINT \"PK_9bfa165ae0185c0617b5e81b41a\" PRIMARY KEY (\"section\", \"name\"))`,\n    );\n\n    await queryRunner.query(\n      `INSERT INTO configuration (section, name, value, type)\n        VALUES (\n            'global',\n            'requireInstallation',\n            'true',\n            '3'\n          );`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"configuration\"`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/createUser.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/createUser.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/createUser.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/createUser.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@IsString()@IsNotEmpty()@MinLength(4)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/createUser.dto.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\n@InputType()\nexport class CreateUserDto {\n  @Field()\n  @IsEmail()\n  @IsNotEmpty()\n  firstName: string;\n\n  @Field()\n  @IsString()\n  @IsNotEmpty()\n  lastName: string;\n\n  @Field()\n  @IsString()\n  @IsNotEmpty()\n  email: string;\n\n  @Field()\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(4)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTable1619763498661.html":{"url":"classes/CreateUserTable1619763498661.html","title":"class - CreateUserTable1619763498661","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTable1619763498661\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1619763498661-CreateUserTable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CreateUserTable1619763498661'\n                        \n                    \n                        \n                            \n                                    Defined in src/migrations/1619763498661-CreateUserTable.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1619763498661-CreateUserTable.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1619763498661-CreateUserTable.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUserTable1619763498661 implements MigrationInterface {\n  name = 'CreateUserTable1619763498661';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"user\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"firstName\" character varying NOT NULL, \"lastName\" character varying NOT NULL, \"email\" character varying NOT NULL, \"password\" character varying NOT NULL, \"birthday\" date, \"isAdmin\" boolean NOT NULL DEFAULT false, \"isActive\" boolean NOT NULL DEFAULT true, \"jobTitle\" character varying, \"createdAt\" TIMESTAMP NOT NULL, CONSTRAINT \"UQ_e12875dfb3b1d92d7d7c5377e22\" UNIQUE (\"email\"), CONSTRAINT \"PK_cace4a159ff9f2512dd42373760\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"user\"`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreditentialInput.html":{"url":"classes/CreditentialInput.html","title":"class - CreditentialInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreditentialInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/creaditentialInput.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/creaditentialInput.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/creaditentialInput.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\n\n@InputType()\nexport class CreditentialInput {\n  @Field()\n  email: string;\n\n  @Field()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/InstallationGuard.html":{"url":"guards/InstallationGuard.html","title":"guard - InstallationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    InstallationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/configuration/guards/installation.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(configurationService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/configuration/guards/installation.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurationService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/configuration/guards/installation.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, Injectable } from '@nestjs/common';\nimport { ConfigurationService } from '../configuration.service';\n\n@Injectable()\nexport class InstallationGuard implements CanActivate {\n  constructor(private readonly configurationService: ConfigurationService) {}\n\n  async canActivate(): Promise {\n    return await this.configurationService.isApplicationRequireInstallation();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      username: payload.username,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeOrmConfigService.html":{"url":"classes/TypeOrmConfigService.html","title":"class - TypeOrmConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeOrmConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TypeOrmOptionsFactory\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTypeOrmOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport * as ormModule from './ormconfig';\n\nexport class TypeOrmConfigService implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return ormModule;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthday\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                isAdmin\n                            \n                            \n                                jobTitle\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jobTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid') id: string;\n\n  @Column({ nullable: false })\n  firstName: string;\n\n  @Column({ nullable: false })\n  lastName: string;\n\n  @Column({ nullable: false, unique: true })\n  email: string;\n\n  @Column({ nullable: false })\n  password: string;\n\n  @Column({ type: 'date', nullable: true })\n  birthday: Date;\n\n  @Column({ type: 'boolean', default: false })\n  isAdmin: boolean;\n\n  @Column({ type: 'boolean', default: true })\n  isActive: boolean;\n\n  @Column({ nullable: true })\n  jobTitle: string;\n\n  @Column({ type: 'timestamp' })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.model.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class User {\n  @Field()\n  id: string;\n\n  @Field()\n  firstName: string;\n\n  @Field()\n  lastName: string;\n\n  @Field()\n  email: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nConfigurationModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigurationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigurationModule } from 'src/configuration/configuration.module';\nimport { User } from './user.entity';\nimport { UsersResolver } from './users.resolver';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [ConfigurationModule, TypeOrmModule.forFeature([User])],\n  providers: [UsersService, UsersResolver],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDefaultAdminUser\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                helloWorld\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, configurationService: ConfigurationService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configurationService\n                                                  \n                                                        \n                                                                        ConfigurationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createDefaultAdminUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createDefaultAdminUser(data: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(InstallationGuard)@Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(data: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            helloWorld\n                        \n                        \n                    \n                \n            \n            \n                \nhelloWorld()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/users.resolver.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UseGuards } from '@nestjs/common';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { ConfigurationService } from 'src/configuration/configuration.service';\nimport { InstallationGuard } from 'src/configuration/guards/installation.guard';\nimport { CreateUserDto } from './dto/createUser.dto';\nimport { User } from './user.model';\nimport { UsersService } from './users.service';\n\n@Resolver()\nexport class UsersResolver {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly configurationService: ConfigurationService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Query(() => String)\n  helloWorld(): string {\n    return 'Hello world';\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Mutation(() => User)\n  async createUser(@Args('user') data: CreateUserDto): Promise {\n    return await this.usersService.create(data);\n  }\n\n  @UseGuards(InstallationGuard)\n  @Mutation(() => User)\n  async createDefaultAdminUser(\n    @Args('user') data: CreateUserDto,\n  ): Promise {\n    const user = await this.usersService.createDefaultAdminUser(data);\n    await this.configurationService.unsetRequireInstallation();\n    return user;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createDefaultAdminUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createDefaultAdminUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createDefaultAdminUser(data: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from './dto/createUser.dto';\nimport { User } from './user.entity';\n\nconst BCRYPT_SALT = 10;\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async findOne(email: string): Promise {\n    return this.usersRepository.findOne({ email });\n  }\n\n  async create(data: CreateUserDto): Promise {\n    const user = new User();\n\n    user.email = data.email;\n    user.firstName = data.firstName;\n    user.lastName = data.lastName;\n    user.password = await bcrypt.hash(data.password, BCRYPT_SALT);\n    user.createdAt = new Date();\n\n    return this.usersRepository.save(user);\n  }\n\n  async createDefaultAdminUser(data: CreateUserDto): Promise {\n    const user = new User();\n\n    user.email = data.email;\n    user.firstName = data.firstName;\n    user.lastName = data.lastName;\n    user.password = await bcrypt.hash(data.password, BCRYPT_SALT);\n    user.isAdmin = true;\n    user.createdAt = new Date();\n\n    return this.usersRepository.save(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            data\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/authenticatedUser.output.ts\n            \n            class\n            AuthenticatedUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/creaditentialInput.ts\n            \n            class\n            CreditentialInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config.service.ts\n            \n            class\n            TypeOrmConfigService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/configuration/configuration.resolver.ts\n            \n            class\n            ConfigurationResolver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configuration/configuration.service.ts\n            \n            injectable\n            ConfigurationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/configuration/entity/configuration.entity.ts\n            \n            class\n            Configuration\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/configuration/guards/installation.guard.ts\n            \n            guard\n            InstallationGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1619763498661-CreateUserTable.ts\n            \n            class\n            CreateUserTable1619763498661\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1619857346529-CreateConfigurationTable.ts\n            \n            class\n            CreateConfigurationTable1619857346529\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ormconfig.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ormconfig.ts\n            \n            variable\n            data\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/createUser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            BCRYPT_SALT\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.13\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/graphql : ^7.10.6\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            apollo-server-express : ^2.23.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^8.2.0\n        \n            graphql : ^15.5.0\n        \n            graphql-tools : ^7.0.4\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.6.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            typeorm : ^0.2.32\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SETTING_TYPE   (src/.../settings.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configuration/interfaces/settings.type.ts\n    \n        \n            \n                \n                    \n                        \n                        SETTING_TYPE\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 boolean\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWORKFLOW API\nThis repository is used to manage the development of the open-source \"Workflow\" application. The application aims to bring a new way of doing project management with various integrations available.\nDevelopment mode\nTo start the development, several solutions are possible.\nUsing VSCode Dev Container\nClone the repository into your local machine\ngh repo clone Torvald-Workflow/graphql-api # PREFERED METHOD\n# OR\ngit@github.com:Torvald-Workflow/graphql-api.git\n# OR\nhttps://github.com/Torvald-Workflow/graphql-api.gitThen, launch the devcontainer using CTRL + MAJ + P and type Remote-Containers: Open Folder in Container.\nYour are now ready to start!\nUsing Node.JS directly\nClone the repository into your local machine\ngh repo clone Torvald-Workflow/graphql-api # PREFERED METHOD\n# OR\ngit@github.com:Torvald-Workflow/graphql-api.git\n# OR\nhttps://github.com/Torvald-Workflow/graphql-api.gitThen, install postgresql using Docker or install in your machine directly.\nDo a yarn install and let's get started!\nAnd then?\nYou need to copy the .env.example to .env and fill with your informations (for devcontainers users, you may not need to edit the file as it is already configured).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigurationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigurationModule\n\n\n\ncluster_ConfigurationModule_exports\n\n\n\ncluster_ConfigurationModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nConfigurationModule->UsersModule\n\n\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nConfigurationService \n\nConfigurationService \n\nConfigurationService  -->\n\nConfigurationModule->ConfigurationService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nConfigurationService\n\nConfigurationService\n\nConfigurationModule -->\n\nConfigurationService->ConfigurationModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BCRYPT_SALT   (src/.../users.service.ts)\n                        \n                        \n                            config   (src/.../ormconfig.ts)\n                        \n                        \n                            data   (src/.../ormconfig.ts)\n                        \n                        \n                            data   (src/.../constants.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BCRYPT_SALT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n\n    src/ormconfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConnectionOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'postgres',\n  host: data.DATABASE_HOST,\n  port: parseInt(data.DATABASE_PORT, 10),\n  username: data.DATABASE_USER,\n  password: data.DATABASE_PASSWORD,\n  database: data.DATABASE_NAME,\n  entities: [__dirname + '/**/*.entity{.ts,.js}'],\n\n  // We are using migrations, synchronize should be set to false.\n  synchronize: process.env.NODE_ENV !== 'production',\n\n  // Run migrations automatically,\n  // you can disable this if you prefer running migration manually.\n  // migrationsRun: (process.env.NODE_ENV === 'production') ? true : false,\n  migrationsRun: process.env.NODE_ENV === 'production',\n  logging: true,\n  logger: 'file',\n\n  // Allow both start:prod and start:dev to use migrations\n  // __dirname is either dist or src folder, meaning either\n  // the compiled js in prod or the ts in dev.\n  migrations: [__dirname + '/migrations/*{.ts,.js}'],\n  cli: {\n    // Location of migration should be inside src folder\n    // to be compiled into dist/ folder.\n    migrationsDir: 'src/migrations',\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: data.JWT_SECRET,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
